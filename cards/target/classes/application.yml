server:
  port: 8082

spring:
  cloud:
    function:
      definition: producer;paymentReply;issueCard
    stream:
      kafka:

        bindings:

          payment-out-0:
            producer:
              configuration:
                value.serializer: com.example.eventbank.cards.dto.converters.MessageSerializer

          paymentReply-in-0:
            consumer:
              configuration:
                value.deserializer: com.example.eventbank.cards.dto.converters.MessageDeSerializer

          notification-out-0:
            producer:
              configuration:
                value.serializer: com.example.eventbank.cards.dto.converters.MessageSerializer

          issueCard-out-0:
            producer:
              configuration:
                value.serializer: com.example.eventbank.customerregistration.dto.converters.MessageSerializer

          issueCard-in-0:
            consumer:
              configuration:
                value.deserializer: com.example.eventbank.customerregistration.dto.converters.MessageDeSerializer

        binder:
          brokers: localhost:29092
          autoAddPartitions: true
          minPartitionCount: 4

      bindings:
        payment-out-0:
          destination: payment-request-events
          producer:
            partition-count: 4
            useNativeEncoding: true

        paymentReply-in-0:
          destination: payment-reply-events
          consumer:
            use-native-decoding: true

        notification-out-0:
          destination: notification-events
          producer:
            partition-count: 4
            useNativeEncoding: true

        issueCard-out-0:
          destination: issue-card-events
          producer:
            useNativeEncoding: true

        issueCard-in-0:
          destination: issue-card-events
          consumer:
            use-native-decoding: true

  jackson:
    serialization:
      write-dates-as-timestamps: false
